{1,
{16,
{"GROOVY (v8.3.0.7 от 06.08.18) ",1,0,"",""},
{7,
{"Прикладные",1,0,"",""},
{0,
{"ВыборСчетаДт",0,0,"СчетДт=","СчетДт = <?"""", ПланСчетовПредопределенныеДанные>;"}
},
{0,
{"ВыборСчетаКт",0,0,"СчетКт=","СчетКт = <?"""", ПланСчетовПредопределенныеДанные>;"}
},
{0,
{"Движение",0,0,"Движение=","Движение = Движения<?>
Движение.Период = Дата;"}
},
{0,
{"СубконтоДт",0,0,"СубконтоДт","СубконтоДт[<?"""", ПланВидовХарактеристикПредопределенныеДанные>] = <?>;"}
},
{0,
{"СубконтоКт",0,0,"СубконтоКт","СубконтоКт[<?"""", ПланВидовХарактеристикПредопределенныеДанные>] = <?>;"}
},
{0,
{"Граница",0,0,"Граница=","Граница = Новый Граница(<?>, <?"""", ВыборВарианта, ""ВидГраницы.Включая"", ""ВидГраницы.Включая"", ""ВидГраницы.Исключая"", ""ВидГраницы.Исключая"">);"}
},
{2,
{"ВидДвижения",1,0,"",""},
{0,
{"РегистрыНакопления",0,0,"ВидД[вижения=]","ВидДвижения = <?"""", ВыборВарианта, ""Приход"", ""ВидДвиженияНакопления.Приход"", ""Расход"", ""ВидДвиженияНакопления.Расход"">;"}
},
{0,
{"РегистрыБухгалтерии",0,0,"ВидД[вижения=]","ВидДвижения = <?"""", ВыборВарианта, ""Дебет"", ""ВидДвиженияБухгалтерии.Дебет"", ""Кредит"", ""ВидДвиженияБухгалтерии.Кредит"">;
"}
}
}
},
{16,
{"Раскладка клавиатуры",1,0,"",""},
{0,
{">",0,0,"Ю",">"}
},
{0,
{"<",0,0,"Б","<"}
},
{0,
{"<>",0,0,"БЮ","<>"}
},
{0,
{"<=",0,0,"Б=","<="}
},
{0,
{">=",0,0,"Ю=",">="}
},
{0,
{"ЕстьТгдд",0,0,"ЕстьТгдд","ЕСТЬNULL(<?>"}
},
{0,
{"NULL",0,0,"тгдд","NULL"}
},
{0,
{"[]",0,0,"хъ","[<?>]"}
},
{0,
{"|",0,0,"\ ","|  <?>"}
},
{0,
{"'",0,0,"ээ","'<?>'"}
},
{0,
{"&",0,0,"? ","&<?>"}
},
{0,
{"WebЦвета",0,0,"цуицвета","WebЦвета<?>"}
},
{0,
{"?НаКлиенте",0,0,"?наКлиенте","&НаКлиенте"}
},
{0,
{"?НаСервере",0,0,"?НаСер[вере]","&НаСервере"}
},
{0,
{"?НаСервереБезКонтекста",0,0,"?НаСер[вереБезКонтекста]","&НаСервереБезКонтекста"}
},
{0,
{"?НаКлиентеНаСервереБезКонтекста",0,0,"?НаКлиенте[НаСервереБезКонтекста]","&НаКлиентеНаСервереБезКонтекста"}
}
},
{6,
{"Коллекции значений",1,0,"",""},
{0,
{"ТЗ",0,0,"ТЗ=","ТЗ = Новый ТаблицаЗначений;
<?>"}
},
{0,
{"СЗ",0,0,"СЗ=","СЗ = Новый СписокЗначений;
<?>"}
},
{0,
{"Структура",0,0,"Структура=","Структура = Новый Структура;
<?>"}
},
{0,
{"Соответствие",0,0,"Соответствие=","Соответствие = Новый Соответствие;
<?>"}
},
{0,
{"ДеревоЗначений",0,0,"ДеревоЗначений=","ДеревоЗначений = Новый ДеревоЗначений;
<?>"}
},
{0,
{"Массив",0,0,"Массив=","Массив = Новый Массив(<?>);"}
}
},
{10,
{"Запросы",1,0,"",""},
{0,
{"Запрос с конструктором",0,0,"Запрос=","Запрос = Новый Запрос;
Запрос.Текст = 
""<?"""", ТекстЗапроса>"";
<?>Запрос.УстановитьПараметр("""", );
РезультатЗапроса = Запрос.Выполнить();

"}
},
{0,
{"Запрос вручную",0,0,"Запрос=","Запрос = Новый Запрос;
Запрос.Текст = 
""ВЫБРАТЬ
|   <?>
|
|
|
|
|
|
|
|"";

Запрос.УстановитьПараметр("""", );
РезультатЗапроса = Запрос.Выполнить();
"}
},
{0,
{"Документ",0,0,"Документ.","Документ.<?"""", ОбъектМетаданных, ""Документ"", ""Документ.ТабличнаяЧасть"">"}
},
{0,
{"Справочник",0,0,"Справочник.","Справочник.<?"""", ОбъектМетаданных, ""Справочник"", ""Справочник.ТабличнаяЧасть"">"}
},
{0,
{"РегистрСведений",0,0,"Рег[истрСведений.]","РегистрСведений.<?"""", ОбъектМетаданных, ""РегистрСведений""><?"""", ВыборВарианта, ""Основная таблица"", ""<?>"", ""СрезПервых"", "".СрезПервых(<?>)"", ""СрезПоследних"", "".СрезПоследних(<?>)"">"}
},
{0,
{"РегистрНакопления",0,0,"Рег[истрНакопления.]","РегистрНакопления.<?"""", ОбъектМетаданных, ""РегистрНакопления""><?"""", ВыборВарианта, ""Основная таблица"", ""<?>"", ""Остатки"", "".Остатки(<?>)"", ""Обороты"", "".Обороты(<?>)"", ""ОстаткиИОбороты"", "".ОстаткиИОбороты(<?>)"">"}
},
{0,
{"РегистрБухгалтерии",0,0,"Рег[истрБухгалтерии.]","РегистрБухгалтерии.<?"""", ОбъектМетаданных, ""РегистрБухгалтерии""><?"""", ВыборВарианта, ""Основная таблица"", ""<?>"", ""Субконто"", "".Субконто"", ""ДвиженияССубконто"", "".ДвиженияССубконто(<?>)"", ""Остатки"", "".Остатки(<?>)"", ""Обороты"", "".Обороты(<?>)"", ""ОстаткиИОбороты"", "".ОстаткиИОбороты(<?>)"", ""ОборотыДтКт"", "".ОборотыДтКт(<?>)"">"}
},
{0,
{"РегистрРасчета",0,0,"Рег[истрРасчета.]","РегистрРасчета.<?"""", ОбъектМетаданных, ""РегистрРасчета"", ""РегистрРасчета.Перерасчет"">"}
},
{0,
{"ЛЕВОЕ СОЕДИНЕНИЕ",0,0,"ЛЕВОЕ","ЛЕВОЕ СОЕДИНЕНИЕ"}
},
{0,
{"ПРАВОЕ СОЕДИНЕНИЕ",0,0,"ПРАВОЕ","ПРАВОЕ СОЕДИНЕНИЕ"}
}
},
{5,
{"Диалоговые",1,0,"",""},
{0,
{"НастройкаПериода",0,0,"НастройкаПериода=","НастройкаПериода = Новый НастройкаПериода;
НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
НастройкаПериода.РедактироватьКакИнтервал = Истина;
НастройкаПериода.РедактироватьКакПериод = Истина;
НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
Если НастройкаПериода.Редактировать() Тогда
	НачПериода = НастройкаПериода.ПолучитьДатуНачала();
	КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
КонецЕсли;
"}
},
{3,
{"Предупреждение",1,0,"",""},
{0,
{"Предупреждение",0,0,"Пр[едупреждение]","ПоказатьПредупреждение(,<?>, 60);"}
},
{0,
{"Предупреждение",0,0,"ПоказатьПр[едупреждение]","ПоказатьПредупреждение(,<?>, 60);"}
},
{0,
{"Предупреждение c обработкой оповещения",0,0,"ПоказатьПр[едупреждение]","ОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
ПоказатьПредупреждение(ОписаниеОповещения, <?>, 60);

//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(ДополнительныеПараметры) Экспорт
	
КонецПроцедуры
"}
}
},
{3,
{"Вопрос",1,0,"",""},
{0,
{"Вопрос",0,0,"Ответ=","лОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
ПоказатьВопрос(лОписаниеОповещения, ""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);

<?> 
//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(вхРезультатВопроса, вхДополнительныеПараметры) Экспорт
	
КонецПроцедуры
"}
},
{0,
{"Вопрос",0,0,"ПоказатьВо[прос]","лОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
ПоказатьВопрос(лОписаниеОповещения, ""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);

<?> 
//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(вхРезультатВопроса, вхДополнительныеПараметры) Экспорт
	
КонецПроцедуры
"}
},
{0,
{"Вопрос",0,0,"Воп[рос]","лОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
ПоказатьВопрос(лОписаниеОповещения, ""<?""Текст вопроса"">"",<?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">, 60);

<?> 
//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(вхРезультатВопроса, вхДополнительныеПараметры) Экспорт
	
КонецПроцедуры
"}
}
},
{2,
{"СообщениеПользователю",1,0,"",""},
{0,
{"Сообщение пользователю",0,0,"Сооб[щение]","лСообщение = Новый СообщениеПользователю;
лСообщение.Текст = ""<?>"";
лСообщение.Сообщить();"}
},
{0,
{"Сообщение пользователю с привязкой к реквизитам",0,0,"Сооб[щение]","лСообщение = Новый СообщениеПользователю;
лСообщение.Текст = ""<?>"";
лСообщение.Поле = """"; //имя реквизита 
лСообщение.УстановитьДанные(); //Ссылка на объект ИБ
лСообщение.Сообщить();"}
}
},
{2,
{"НачатьПомещениеФайла",1,0,"",""},
{0,
{"ПоместитьФайл",0,0,"ПоместитьФ[айл]","лОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
НачатьПомещениеФайла(лОписаниеОповещения, , ,Истина, УникальныйИдентификатор);

<?>
//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(вхРезультат, вхАдрес, вхВыбранноеИмяФайла, вхДополнительныеПараметры) Экспорт
	
КонецПроцедуры
"}
},
{0,
{"ПоместитьФайл",0,0,"НачатьПо[мещениеФайла]","лОписаниеОповещения = Новый ОписаниеОповещения(""<?""Имя процедуры обработчика"">"", ЭтотОбъект);
НачатьПомещениеФайла(лОписаниеОповещения, , ,Истина, УникальныйИдентификатор);

<?>
//Вынести в отдельную процедуру
&НаКлиенте
Процедура <?""Имя процедуры обработчика"">(вхРезультат, вхАдрес, вхВыбранноеИмяФайла, вхДополнительныеПараметры) Экспорт
	
КонецПроцедуры
"}
}
}
},
{3,
{"Табличный документ",1,0,"",""},
{0,
{"ТабДок",0,0,"ТабДок=","лТабДок = <?"""", ВыборВарианта, ""ЭлементыФормы.ТабДок"", ""ЭлементыФормы.ТабДок"", ""Новый ТабличныйДокумент"", ""Новый ТабличныйДокумент"">;
<?>"}
},
{0,
{"ПолучитьОбласть",0,0,"Обл=","лОбл<?""Название области""> = <?>.ПолучитьОбласть(""<?""Название области"">"");"}
},
{0,
{"Макет",0,0,"Макет=","лМакет = ПолучитьМакет(""Макет"");"}
}
},
{20,
{"Сокращения",1,0,"",""},
{0,
{"НачалоМесяца",0,0,"НМ","НачалоМесяца(<?>)"}
},
{0,
{"КонецМесяца",0,0,"КМ","КонецМесяца(<?>)"}
},
{0,
{"НачалоДня",0,0,"НД","НачалоДня(<?>)"}
},
{0,
{"КонецДня",0,0,"КД","КонецДня(<?>)"}
},
{0,
{"ТекущаяДата",0,0,"ТД","ТекущаяДата()<?>"}
},
{0,
{"ПериодДействияНачало",0,0,"ПДН","ПериодДействияНачало"}
},
{0,
{"ПериодДействияКонец",0,0,"ПДК","ПериодДействияКонец"}
},
{0,
{"БазовыйПериодНачало",0,0,"БПН","БазовыйПериодНачало"}
},
{0,
{"БазовыйПериодКонец",0,0,"БПК","БазовыйПериодКонец"}
},
{0,
{"ПланыВидовХарактеристик",0,0,"ПВХ","<?"""", ПланВидовХарактеристикПредопределенныеДанные>"}
},
{0,
{"ПланыВидовРасчета",0,0,"ПВР","<?"""", ПланВидовРасчетаПредопределенныеДанные>"}
},
{0,
{"ДобавитьМесяц",0,0,"ДМ","ДобавитьМесяц(<?>,)"}
},
{0,
{"Неопределено",0,0,"Неоп[ределено]","Неопределено"}
},
{0,
{"УстановитьПараметр",0,0,"УП","УстановитьПараметр(""<?>"",);"}
},
{0,
{"Контрагент",0,0,"Конт[рагент]","Контрагент"}
},
{0,
{"Номенклатура",0,0,"Номе[нклатура]","Номенклатура"}
},
{0,
{"Количество",0,0,"Коли[чество]","Количество"}
},
{0,
{"Стоимость",0,0,"Стои[мость]","Стоимость"}
},
{0,
{"УстановитьЗначениеПараметра",0,0,"УЗП","УстановитьЗначениеПараметра(""<?>"",);"}
},
{0,
{"МоментВремени",0,0,"МВ","МоментВремени()"}
}
},
{4,
{"НаборЗаписей",1,0,"",""},
{0,
{"РегистрСведений",0,0,"НаборЗаписей=","лНаборЗаписей = РегистрыСведений.<?"""", РегистрСведений>.СоздатьНаборЗаписей();
"}
},
{0,
{"РегистрНакопления",0,0,"НаборЗаписей=","лНаборЗаписей = РегистрыНакопления.<?"""", РегистрНакопления>.СоздатьНаборЗаписей();
лНаборЗаписей.Отбор.Регистратор.Установить(<?>);
лНаборЗаписей.Прочитать();"}
},
{0,
{"РегистрБухгалтерии",0,0,"НаборЗаписей=","лНаборЗаписей = РегистрыБухгалтерии.<?"""", РегистрБухгалтерии>.СоздатьНаборЗаписей();
лНаборЗаписей.Отбор.Регистратор.Установить(<?>);
лНаборЗаписей.Прочитать();"}
},
{0,
{"РегистрРасчета",0,0,"НаборЗаписей=","лНаборЗаписей = РегистрыРасчета.<?"""", РегистрРасчета>.СоздатьНаборЗаписей();
лНаборЗаписей.Отбор.Регистратор.Установить(<?>);
лНаборЗаписей.Прочитать();"}
}
},
{7,
{"Прочие",1,0,"",""},
{0,
{"Формат",0,0,"Формат","Формат(<?>, ""<?, ФорматнаяСтрока>"")"}
},
{0,
{"Конструктор описания типов",0,1,"","<?""Конструктор описания типов"", КонструкторОписанияТипов>"}
},
{0,
{"Проверка типа",0,1,"","Если ТипЗнч(<?""Выражение для проверки типа"">) = Тип(""<?""Выберите тип"", ВыборТипа>"") Тогда

	<?>

КонецЕсли;"}
},
{0,
{"Шрифт",0,0,"Шрифт=","//	КОНСТРУКТОР     Имя шрифта, Размер, Жирный, Наклонный, Подчеркнутый, Зачеркнутый
Шрифт = Новый Шрифт(   <?>       ,       ,       ,          ,             ,            );"}
},
{0,
{"ЧислоПрописью",0,0,"Число[Прописью]","ЧислоПрописью(<?>,,""рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2"")"}
},
{0,
{"Выборка",0,0,"Выборка=","лВыборка = <?>.Выбрать();
Пока лВыборка.Следующий() Цикл

КонецЦикла; "}
},
{0,
{"нСтр",0,0,"нСтр","нСтр(""ru='<?>'"", ""ru"")"}
}
},
{4,
{"Инструкции предпроцессору",1,0,"",""},
{0,
{"#Если",0,0,"№Если","#Если <?"""", ВыборВарианта, ""Клиент"", ""Клиент"", ""Сервер"", ""Сервер"", ""ВнешнееСоединение"", ""ВнешнееСоединение"" ,""ТолстыйКлиентОбычноеПриложение"", ""ТолстыйКлиентОбычноеПриложение"", ""ТолстыйКлиентУправляемоеПриложение"",""ТолстыйКлиентУправляемоеПриложение"", ""ТонкийКлиент"", ""ТонкийКлиент"", ""ВебКлиент"", ""ВебКлиент""> Тогда
    <?> 	
#КонецЕсли"}
},
{0,
{"#Если",0,0,"#Если","#Если <?"""", ВыборВарианта, ""Клиент"", ""Клиент"", ""Сервер"", ""Сервер"", ""ВнешнееСоединение"", ""ВнешнееСоединение"" ,""ТолстыйКлиентОбычноеПриложение"", ""ТолстыйКлиентОбычноеПриложение"", ""ТолстыйКлиентУправляемоеПриложение"",""ТолстыйКлиентУправляемоеПриложение"", ""ТонкийКлиент"", ""ТонкийКлиент"", ""ВебКлиент"", ""ВебКлиент""> Тогда
    <?> 	
#КонецЕсли"}
},
{0,
{"#Вставка",0,0,"№Вставка","#Вставка
<?>
#КонецВставки"}
},
{0,
{"#Удаление",0,0,"№Удаление","#Удаление
<?>
#КонецУдаления"}
}
},
{4,
{"Блокировки",1,0,"",""},
{0,
{"Блокировка РегистрНакопления",0,0,"Блокировка=","Блокировка = Новый БлокировкаДанных;
ЭлементБлокировки = Блокировка.Добавить(""РегистрНакопления.<?"""", РегистрНакопления>"");
ЭлементБлокировки.Режим = <?"""", ВыборВарианта, ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Разделяемый"", ""РежимБлокировкиДанных.Разделяемый"">;
//ЭлементБлокировки.ИсточникДанных = <?>;
//ЭлементБлокировки.ИспользоватьИзИсточникаДанных("""", """");
//ЭлементБлокировки.УстановитьЗначение("""", );
Блокировка.Заблокировать(); 
"}
},
{0,
{"Блокировка РегистрБухгалтерии",0,0,"Блокировка=","Блокировка = Новый БлокировкаДанных;
ЭлементБлокировки = Блокировка.Добавить(""РегистрБухгалтерии.<?"""", РегистрБухгалтерии>"");
ЭлементБлокировки.Режим = <?"""", ВыборВарианта, ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Разделяемый"", ""РежимБлокировкиДанных.Разделяемый"">;
//ЭлементБлокировки.УстановитьЗначение(""Период"", Новый Диапазон( , ));
//ЭлементБлокировки.УстановитьЗначение(""Счет"", );
Блокировка.Заблокировать(); 
"}
},
{0,
{"Блокировка РегистрСведений",0,0,"Блокировка=","Блокировка = Новый БлокировкаДанных;
ЭлементБлокировки = Блокировка.Добавить(""РегистрСведений.<?"""", РегистрСведений>"");
ЭлементБлокировки.Режим = <?"""", ВыборВарианта, ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Разделяемый"", ""РежимБлокировкиДанных.Разделяемый"">;
//ЭлементБлокировки.ИсточникДанных = <?>;
//ЭлементБлокировки.ИспользоватьИзИсточникаДанных("""", """");
//ЭлементБлокировки.УстановитьЗначение("""", );
Блокировка.Заблокировать(); 
"}
},
{0,
{"Блокировка РегистрРасчета",0,0,"Блокировка=","Блокировка = Новый БлокировкаДанных;
ЭлементБлокировки = Блокировка.Добавить(""РегистрРасчета.<?"""", РегистрРасчета>"");
ЭлементБлокировки.Режим = <?"""", ВыборВарианта, ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Исключительный"", ""РежимБлокировкиДанных.Разделяемый"", ""РежимБлокировкиДанных.Разделяемый"">;
//ЭлементБлокировки.ИсточникДанных = <?>;
//ЭлементБлокировки.ИспользоватьИзИсточникаДанных("""", """");
//ЭлементБлокировки.УстановитьЗначение("""", );
Блокировка.Заблокировать(); 
"}
}
},
{1,
{"Запись",1,0,"",""},
{0,
{"ЗаписьРегистраРасчетов",0,0,"Запись=","Запись = Движения.<?"""", РегистрРасчета>.Добавить();
Запись.ПериодРегистрации = Дата;
Запись.ПериодДействияНачало = ;
Запись.ПериодДействияКонец = ;
Запись.Сторно = Ложь;
Запись.Сотрудник = ;
Запись.Подразделение = ;
Запись.График = ;
Запись.Параметр = ;
Запись.БазовыйПериодНачало = ;
Запись.БазовыйПериодКонец = ;"}
}
},
{10,
{"Комментарии и области",1,0,"",""},
{0,
{"Отчерк",0,0,"/*","<?>//======================================================================================================================"}
},
{0,
{"Группировка с комментарием ",0,0,"\хъ","//{<?>
//}"}
},
{0,
{"Группировка с комментарием Открыть",0,0,"\х","//{<?>"}
},
{0,
{"Группировка с комментарием Закрыть",0,0,"\ъ","//}<?>"}
},
{0,
{"Фрагмент добавлен",0,0,"/+","//{[+](фрагмент ДОБАВЛЕН), emakei <?"""", ДатаВремя, ""ДЛФ=DT"">
<?>
//}emakei <?"""", ДатаВремя, ""ДЛФ=DT"">"}
},
{0,
{"Фрагмент удален",0,0,"/-","//{[-](фрагмент УДАЛЕН)emakei <?"""", ДатаВремя, ""ДЛФ=DT"">
<?>
//}emakei <?"""", ДатаВремя, ""ДЛФ=DT"">"}
},
{0,
{"Фрагмент ИЗМЕНЕН",0,1,"/+_","//{[*](фрагмент ИЗМЕНЕН), emakei <?"""", ДатаВремя, ""ДЛФ=DT"">
<?>
//}emakei <?"""", ДатаВремя, ""ДЛФ=DT"">"}
},
{0,
{"Заголовок модуля",0,0,"/ЗМ","////////////////////////////////////////////////////////////////////////////////
// МОДУЛЬ <?>:
//
// -
//
//
////////////////////////////////////////////////////////////////////////////////"}
},
{0,
{"Область",0,0,"Обла[сть]","#Область <?""Имя области (без пробелов)"">

#КонецОбласти"}
},
{0,
{"Заголовок",0,0,"Заг[оловок]","////////////////////////////////////////////////////////////////////////////////
//
//	<?>
//"}
}
},
{4,
{"СКД - альфа версия",1,0,"",""},
{6,
{"НаборыДанных",1,0,"",""},
{0,
{"СхемаКомпоновки",0,0,"СКД=","СхемаКомпоновки = Новый СхемаКомпоновкиДанных;"}
},
{0,
{"ИсточникДанныхСКД",0,0,"Источник[ДанныхСКД]=","ИсточникДанных = СхемаКомпоновки.ИсточникиДанных.Добавить();
ИсточникДанных.Имя = ""local"";
ИсточникДанных.ТипИсточникаДанных = ""local"";
"}
},
{0,
{"Набор данных Запрос",0,0,"НаборД[анных=]","НаборДанных = СхемаКомпоновки.НаборыДанных.Добавить(Тип(""НаборДанныхЗапросСхемыКомпоновкиДанных""));
НаборДанных.Имя = ""НаборДанных1"";
НаборДанных.ИсточникДанных = ИсточникДанных.Имя;
НаборДанных.Запрос = <?>;
"}
},
{0,
{"Набор данных Объект",0,0,"НаборД[анных=]","НаборДанных = СхемаКомпоновки.НаборыДанных.Добавить(Тип(""НаборДанныхОбъектСхемыКомпоновкиДанных""));
НаборДанных.Имя = ""НаборДанных1"";
НаборДанных.ИсточникДанных = ИсточникДанных.Имя;
НаборДанных.ИмяОбъекта = <?>;
"}
},
{0,
{"Набор данных Объединение",0,0,"НаборД[анных=]","НаборДанных = СхемаКомпоновки.НаборыДанных.Добавить(Тип(""НаборДанныхОбъединениеСхемыКомпоновкиДанных""));
НаборДанных.Имя = ""НаборДанных1"";
НаборДанных.Элементы = <?>;
"}
},
{0,
{"ПолеСКД",0,0,"ПолеСКД=","ПолеСКД = НаборДанных.Поля.Добавить(Тип(""ПолеНабораДанныхСхемыКомпоновкиДанных""));
ПолеСКД.Поле = ""<?>"";
ПолеСКД.ПутьКДанным = ""<?>"";
ПолеСКД.Роль.Измерение = Истина;
"}
}
},
{1,
{"Ресурсы",1,0,"",""},
{0,
{"РесурсСКД",0,0,"РесурсСКД=","РесурсСКД = СхемаКомпоновки.ПоляИтога.Добавить();
РесурсСКД.ПутьКДанным = ""<?>""; 
РесурсСКД.Выражение = ""Сумма(<?>)"";"}
}
},
{1,
{"Параметры",1,0,"",""},
{0,
{"ПараметрСКД",0,0,"ПараметрСКД=","ПараметрСКД = СхемаКомпоновки.Параметры.Добавить(); //Разные параметры надо описывать разными переменными!
ПараметрСКД.Имя = <?""Имя параметра"">;
ПараметрСКД.Заголовок = <?""Имя параметра"">;
ПараметрСКД.ТипЗначения = <?""Конструктор описания типов"", КонструкторОписанияТипов>;
ПараметрСКД.ВключатьВДоступныеПоля = Истина;
ПараметрСКД.Использование = ИспользованиеПараметраКомпоновкиДанных.Авто;
"}
}
},
{10,
{"Настройки",1,0,"",""},
{0,
{"НастройкиСКД Новый вариант",0,0,"НастройкиСКД=","НастройкиСКД = СхемаКомпоновки.ВариантыНастроек.Добавить();"}
},
{0,
{"НастройкиСКД Настройки по умолчанию",0,0,"НастройкиСКД=","НастройкиСКД = СхемаКомпоновки.НастройкиПоУмолчанию;
"}
},
{0,
{"ГруппировкаСКД - новая группировка в корень",0,0,"ГруппировкаСКД=","ГруппировкаСКД = НастройкиСКД.Структура.Добавить(Тип(""<?"""", ВыборВарианта, ""Группировка"", ""ГруппировкаКомпоновкиДанных"", ""Таблица"", ""ТаблицаКомпоновкиДанных"">""));
ГруппировкаСКД.Использование = Истина;
ПолеГруппировки = ГруппировкаСКД.ПоляГруппировки.Элементы.Добавить(Тип(""ПолеГруппировкиКомпоновкиДанных""));
ПолеГруппировки.Использование = Истина;
ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных(""<?""Введите имя поля"">"");
"}
},
{0,
{"ГруппировкаСКД - вложенная группировка",0,0,"ГруппировкаСКД=","ГруппировкаСКД = ГруппировкаСКД.Структура.Добавить(Тип(""<?"""", ВыборВарианта, ""Группировка"", ""ГруппировкаКомпоновкиДанных"", ""Таблица"", ""ТаблицаКомпоновкиДанных"">""));
ГруппировкаСКД.Использование = Истина;
ПолеГруппировки = ГруппировкаСКД.ПоляГруппировки.Элементы.Добавить(Тип(""ПолеГруппировкиКомпоновкиДанных""));
ПолеГруппировки.Использование = Истина;
ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных(""<?""Введите имя поля"">"");
"}
},
{0,
{"ВыбранноеПолеСКД - АвтоПоле",0,0,"ВыбранноеПолеСКД=","ВыбранноеПолеСКД = ГруппировкаСКД.Выбор.Элементы.Добавить(Тип(""АвтоВыбранноеПолеКомпоновкиДанных""));
ВыбранноеПолеСКД.Использование = Истина;
"}
},
{0,
{"ВыбранноеПолеСКД - Произольное поле",0,0,"ВыбранноеПолеСКД=","ВыбранноеПолеСКД = ГруппировкаСКД.Выбор.Элементы.Добавить(Новый ПолеКомпоновкиДанных(""<?""Введите имя поля"">""));
ВыбранноеПолеСКД.Использование = Истина;
"}
},
{0,
{"ПолеСортировкиСКД - Авто",0,0,"ПолеСортировкиСКД=","ПолеСортировки = НастройкиСКД.Порядок.Элементы.Добавить(Тип(""АвтоЭлементПорядкаКомпоновкиДанных""));
ПолеСортировки.Использование = Истина;
"}
},
{0,
{"ПолеСортировкиСКД - Произольное поле",0,0,"ПолеСортировкиСКД=","ПолеСортировки = НастройкиСКД.Порядок.Элементы.Добавить(Новый ПолеКомпоновкиДанных(""<?""Введите имя поля"">""));
ПолеСортировки.Использование = Истина;
"}
},
{0,
{"ЗначениеПараметраСКД",0,0,"","ЗначениеПараметраСКД = НастройкиСКД.ПараметрыДанных.Элементы.Добавить();
ЗначениеПараметраСКД.Использование = Истина;
ЗначениеПараметраСКД.Параметр = Новый ПараметрКомпоновкиДанных(""<?""Имя параметра"">"");
ЗначениеПараметраСКД.Значение = <?""Значение параметра"">;"}
},
{0,
{"ОтборСКД",0,0,"","ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
ЭлементОтбора.Использование = Истина;
ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(""<?""Введите имя отбора"">"");
ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
ЭлементОтбора.ПравоеЗначение = <?""Укажите значение отбора"">;
"}
}
}
},
{6,
{"GTD",1,0,"",""},
{0,
{"Сделать",0,0,"сде[лать]","// СДЕЛАТЬ:<?>"}
},
{0,
{"Исправить",0,0,"испр[авить]","// ИСПРАВИТЬ:<?>"}
},
{0,
{"Ошибка",0,0,"ош[ибка]","// ОШИБКА:<?>"}
},
{0,
{"Рефакторинг",0,0,"Ре[факторинг]","// РЕФАКТОРИНГ:<?>"}
},
{0,
{"Тест",0,0,"тест","// ТЕСТ:<?>"}
},
{0,
{"Удалить",0,0,"удал[ить]","//УДАЛИТЬ:<?>"}
}
},
{6,
{"Структура модулей",1,0,"",""},
{0,
{"Общий модуль",0,0,"ОбщийМодуль","////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти"}
},
{0,
{"Модуль объекта",0,0,"МодульОбъекта","#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область ОбработчикиПроведения

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти


"}
},
{0,
{"Модуль формы",0,0,"МодульФормы","#Область ОбработчикиСобытийФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы<ИмяТаблицыФормы>

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти"}
},
{0,
{"Модуль бизнес-процесса",0,0,"МодульБизнес[Процесса]","#Область ОбработчикиСобытийКартыМаршрута

#КонецОбласти

#Область ОбработчикиСобытийМодуля

#КонецОбласти

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
"}
},
{0,
{"Модуль доп. обработки",0,0,"МодульДоп[обработки]","// Функция СведенияОВнешнейОбработке
//
Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();
	ПараметрыРегистрации.Вставить(""Вид"", ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработки<?>);
	ПараметрыРегистрации.Вставить(""Версия"", """");
	ПараметрыРегистрации.Вставить(""Наименование"", НСтр(""ru=''""));
	ПараметрыРегистрации.Вставить(""Информация"", НСтр(""ru=''""));
	ПараметрыРегистрации.Назначение.Добавить("""");
	
	Команда = ПараметрыРегистрации.Команды.Добавить();
	Команда.Идентификатор = ""<?""Идентификатор"">"";
	Команда.Представление = НСтр(""ru=''"");
	Команда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды;
	Команда.ПоказыватьОповещение = Ложь;
	
	Возврат ПараметрыРегистрации;

КонецФункции //СведенияОВнешнейОбработке
"}
},
{0,
{"Модуль доп. печатной формы",0,0,"МодульДоп[ПечатнойФормы]","
// Функция СведенияОВнешнейОбработке
//
Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();
	ПараметрыРегистрации.Вставить(""Вид"", ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма());
	ПараметрыРегистрации.Вставить(""Версия"", """");
	ПараметрыРегистрации.Вставить(""Наименование"", НСтр(""ru=''""));
	ПараметрыРегистрации.Вставить(""Информация"", НСтр(""ru=''""));
	ПараметрыРегистрации.Назначение.Добавить("""");
	
	Команда = ПараметрыРегистрации.Команды.Добавить();
	Команда.Идентификатор = ""<?""Идентификатор"">"";
	Команда.Представление = НСтр(""ru=''"");
	Команда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	Команда.ПоказыватьОповещение = Ложь;
	
	Возврат ПараметрыРегистрации;

КонецФункции //СведенияОВнешнейОбработке

// Обработчик печати.
//
// Параметры:
//   МассивОбъектов - Массив - Ссылки на объекты, которые нужно распечатать.
//   КоллекцияПечатныхФорм - ТаблицаЗначений - Информация о табличных документах.
//       Используется для передачи в параметрах функции УправлениеПечатью.СведенияОПечатнойФорме().
//   ОбъектыПечати - СписокЗначений - Соответствие между объектами и именами областей в табличных документах.
//       Используется для передачи в параметрах процедуры УправлениеПечатью.ЗадатьОбластьПечатиДокумента().
//   ПараметрыВывода - Структура - Дополнительные параметры сформированных табличных документов.
//       * ДополнительнаяОбработкаСсылка - СправочникСсылка.ДополнительныеОтчетыИОбработки - Ссылка обработки.
//           Может использоваться для чтения параметров обработки.
//           Пример см. в комментарии к функции ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы().
//
Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, ""<?""Идентификатор"">"");
 	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет(""<?""Идентификатор"">"");
 	Для Каждого Ссылка Из МассивОбъектов Цикл
 		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
 			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
 		КонецЕсли;
 		НачалоОбласти = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Вставить содержимое
		
		ТабличныйДокумент.Вывести(Макет);
 		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НачалоОбласти, ОбъектыПечати, Ссылка);
 	КонецЦикла;
 	ПечатнаяФорма.ТабличныйДокумент = ТабличныйДокумент;

КонецПроцедуры"}
}
}
}
}